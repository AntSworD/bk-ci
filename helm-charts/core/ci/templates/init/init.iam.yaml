# 初始化iam
{{ if .Values.init.iam }}
{{- if eq .Values.config.bkCiAuthProvider "bk_login_v3" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "bkci.names.fullname" . }}-init-iam
  labels: {{- include "bkci.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: init-iam
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels: {{- include "bkci.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: init-iam
    spec:
      {{- if .Values.mysql.enabled }}
      initContainers:
        - name: wait-for-mysql
          image: {{ include "common.images.image" ( dict "imageRoot" .Values.backendImage "global" .Values.global) }}
          imagePullPolicy: {{ .Values.backendImage.pullPolicy }}
          command:
            - "/bin/sh"
            - "-c"
            - |
              until getent hosts {{ include "bkci.mysql.fullname" . }}
              do 
                echo waiting for {{ include "bkci.mysql.fullname" . }};
                sleep 2;
              done
              echo "MySQL is available";
      {{- end }}
      containers:
        - name: init-iam
          image: {{ include "bkci-backend.image" . }}
          imagePullPolicy: {{ .Values.backendImage.pullPolicy }}
          workingDir: /data/workspace/support-files/bkiam
          {{ $mysqlData := split ":" (include "bkci.mysqlAddr" .) }}
          command:
            - "/bin/bash"
            - "-c"
            - |
              # 修改auth链接
              sed -i 's/ci-auth.service.consul:21936/{{- .Values.config.bkCiHost -}}\/auth/g' *.json
              # 导入模型
              for i in $(find . -name '*.json'|sort)
              do
               python3 bkiam_do_migrate.py -t {{ .Values.config.bkIamPrivateUrl }} -a "{{ .Values.config.bkCiAppCode }}" -s "{{ .Values.config.bkCiAppToken }}" -f  $i
              done
              # 导入数据库
              cat << EOF > iam.sql
              UPDATE T_AUTH_IAM_CALLBACK SET GATEWAY="http://{{ include "bkci.names.fullname" . }}-gateway.{{ .Release.Namespace }}" where `SYSTEM`="ci"
              EOF
              mysql -u{{- include "bkci.mysqlUsername" . }} -p{{- include "bkci.mysqlPassword" . }} -h{{ $mysqlData._0 }} -P{{ $mysqlData._1 }} devops_ci_auth < iam.sql;
      restartPolicy: OnFailure
{{- end -}}
{{- end -}}
