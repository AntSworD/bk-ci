package com.tencent.devops.process.constant

const val BK_PIPELINE_SINGLE_BUILD = "bkPipelineSingleBuild"
const val BK_MUTEX_GROUP_SINGLE_BUILD = "bkMutexGroupSingleBuild"
const val BK_NON_TIMED_TRIGGER_SKIP = "bkNonTimedTriggerSkip"
const val BK_FIRST_STAGE_ENV_NOT_EMPTY = "bkFirstStageEnvNotEmpty"
const val BK_QUALITY_CHECK_SUCCEED = "bkQualityCheckSucceed"
const val BK_QUALITY_CHECK_INTERCEPTED = "bkQualityCheckIntercepted"
const val BK_QUALITY_TO_BE_REVIEW = "bkQualityToBeReview"
const val BK_POLLING_WAIT_FOR_QUALITY_RESULT = "bkPollingWaitForQualityResult"
const val BK_QUALITY_CHECK_RESULT = "bkQualityCheckResult"
const val BK_AUDIT_TIMEOUT = "bkAuditTimeout"
const val BK_AUDIT_RESULT = "bkAuditResult"
const val BK_PROCESSING_CURRENT_REPORTED_TASK_PLEASE_WAIT = "bkProcessingCurrentReportedTaskPleaseWait"// 正在处理当前上报的任务, 请稍等。。。
const val BK_ENV_NOT_YET_SUPPORTED = "bkEnvNotYetSupported"// 尚未支持 {0} {1}，请联系 DevOps-helper 添加对应版本
const val BK_VIEW_ID_AND_NAME_CANNOT_BE_EMPTY_TOGETHER = "bkViewIdAndNameCannotBeEmptyTogether"// <viewId>和<viewName>不能同时为空, 填<viewName>时需同时填写参数<isProject>
const val BK_TRIGGERED_BY_GIT_EVENT_PLUGIN = "bkTriggeredByGitEventPlugin"// 因【Git事件触发】插件中，MR Request Hook勾选了【MR为同源同目标分支时，等待队列只保留最新触发的任务】配置，该次构建已被新触发的构建
const val BK_BUILD_IN_REVIEW_STATUS = "bkBuildInReviewStatus"// 项目【{0}】下的流水线【{1}】#{2} 构建处于待审核状态
const val BK_CHECK_THE_WEB_DATA = "bkCheckTheWebData"// 查web端数据:
const val BK_CHECK_FILE_COUNT_AND_VERSION = "bkCheckFileCountAndVersion"// 查文件个数、版本:
const val BK_QUERY_PIPELINE_INFO = "bkQueryPipelineInfo"// 查流水线信息:
const val BK_QUERY_FAVORITE_PIPELINE = "bkQueryFavoritePipeline"// 查询收藏的流水线:
const val BK_PROJECT_NO_PIPELINE = "bkProjectNoPipeline"// 项目下无流水线
const val BK_NO_MATCHING_STARTED_PIPELINE = "bkNoMatchingStartedPipeline"//未匹配到启用流水线
const val BK_USER_NO_PIPELINE_EXECUTE_PERMISSIONS = "bkUserNoPipelineExecutePermissions"// 用户（{0}) 没有流水线({1})的执行权限
const val BK_REMOTE_CALL_SOURCE_IP = "bkRemoteCallSourceIp"// 本次远程调用的来源IP是[$sourceIp]
const val BK_OPERATE_PIPELINE_FAIL = "bkOperatePipelineFail"// {0}流水线失败
const val BK_PIPELINE_NAME = "bkPipelineName"// 流水线名称
const val BK_CREATOR = "bkCreator"// 创建人
